<idea-plugin>
    <id>org.move.lang</id>
    <name>Move Language</name>

    <vendor>Maksim Kurnikov</vendor>

    <description>
        <![CDATA[
            <p>Support for the Move, smart-contract language for the Libra and Dfinance blockchains.</p>

            <p><a href="https://github.com/mkurnikov/intellij-move">https://github.com/mkurnikov/intellij-move</a></p>
        ]]>
    </description>

    <change-notes>
        <![CDATA[
            <p>0.11.0</p>
            <p>Support for Intellij IDEA 2020.3</p>
            <p>Initial folding support</p>
        ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="Move"
                  language="Move"
                  extensions="move"
                  implementationClass="org.move.lang.MoveFileType"
                  fieldName="INSTANCE"/>

        <lang.parserDefinition language="Move"
                               implementationClass="org.move.lang.MoveParserDefinition"/>
        <!--        <stubElementTypeHolder class="org.move.lang.MoveElementTypes"/>-->

        <lang.syntaxHighlighter language="Move"
                                implementationClass="org.move.ide.MoveHighlighter"/>
        <lang.commenter language="Move"
                        implementationClass="org.move.ide.MoveCommenter"/>
        <lang.braceMatcher language="Move"
                           implementationClass="org.move.ide.typing.MoveBraceMatcher"/>
        <lang.formatter language="Move"
                        implementationClass="org.move.ide.formatter.MoveFormattingModelBuilder"/>
        <lang.foldingBuilder language="Move" implementationClass="org.move.ide.folding.MoveFoldingBuilder"/>

        <lang.namesValidator language="Move"
                             implementationClass="org.move.ide.refactoring.MoveNamesValidator"/>
        <lang.refactoringSupport language="Move"
                                 implementationClass="org.move.ide.refactoring.MoveRefactoringSupportProvider"/>
        <lang.findUsagesProvider language="Move"
                                 implementationClass="org.move.ide.search.MoveFindUsagesProvider"/>

        <completion.contributor language="Move"
                                implementationClass="org.move.lang.core.completion.CommonCompletionContributor"/>
        <completion.contributor language="Move"
                                implementationClass="org.move.lang.core.completion.KeywordCompletionContributor"/>
        <psi.referenceContributor language="Move"
                                  implementation="org.move.lang.ReferenceContributor"/>
        <annotator language="Move"
                   implementationClass="org.move.ide.annotator.ErrorAnnotator"/>
        <annotator language="Move"
                   implementationClass="org.move.ide.annotator.HighlightingAnnotator"/>
        <configurationType implementation="org.move.movec.CompilerCheckConfigurationType"/>

        <codeInsight.parameterInfo language="Move"
                                   implementationClass="org.move.ide.hints.parameter.FunctionParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Move"
                                   implementationClass="org.move.ide.hints.parameter.TypeParameterInfoHandler"/>
        <codeInsight.parameterNameHints language="Move"
                                        implementationClass="org.move.ide.hints.parameter.MoveInlayParameterHintsProvider"/>

        <!--        <stubIndex implementation="org.move.lang.core.stubs.index.MoveNamedElementIndex"/>-->

        <!--        <localInspection language="Move" groupPath="Move" groupName="Naming"-->
        <!--                         displayName="Attempt to override a built-in function"-->
        <!--                         enabledByDefault="true" level="ERROR"-->
        <!--                         implementationClass="org.move.ide.inspections.lints.FunctionNamingInspection"/>-->
        <localInspection language="Move" groupName="Move"
                         displayName="Unresolved reference"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.move.ide.inspections.MoveUnresolvedReferenceInspection"/>

        <editorNotificationProvider
                implementation="org.move.ide.notifications.NoDoveProjectFoundNotificationProvider"/>

        <!-- Color Settings -->
        <colorSettingsPage implementation="org.move.ide.colors.MoveColorSettingsPage"/>

        <additionalTextAttributes scheme="Default" file="colors/MoveDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colors/MoveDarcula.xml"/>

        <!-- Movec -->
        <projectConfigurable instance="org.move.project.configurable.MoveProjectConfigurable"
                             displayName="Move"
                             groupId="language"
                             id="language.move"/>
        <projectService serviceInterface="org.move.project.settings.MoveProjectSettingsService"
                        serviceImplementation="org.move.project.settings.impl.MoveProjectSettingsServiceImpl"/>
        <projectService serviceImplementation="org.move.dove.project.model.DoveProjectService" />

    </extensions>

    <actions>
        <action id="Move.NewMoveFile"
                class="org.move.ide.actions.CreateMoveFileAction"
                text="Move File"
                description="Create new Move file">
            <!--            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>-->
        </action>
    </actions>
</idea-plugin>
